import telebot
import config
from DataBase import *
from functions import *
from keyboards import *

bot = telebot.TeleBot(config.TG_API_TOKEN, parse_mode='HTML')
url = config.URL
# @bot.message_handler(commands=["admin_test"])
# def test(message): 
#         bot.send_message(message.chat.id, f"\{message.chat.id}")


@bot.message_handler(commands=["start"])
def send_welcome(message): 
    user_id = message.from_user.id
    if user_id not in select_users_tgId():
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≠–î–°!", reply_markup=keyboard_commands)
        # bot.send_message(message.chat.id, f"{message.chat.id}" , reply_markup=keyboard1)
        user_first_name = message.from_user.first_name if message.from_user.first_name != None else ""
        user_last_name = message.from_user.last_name if message.from_user.last_name != None else ""
        user_name = user_first_name + user_last_name if user_first_name + user_last_name != "" else message.from_user.username
        add_user(user_id, user_name)
    else:
        bot.send_message(message.chat.id, f"–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {message.from_user.first_name}!", reply_markup=keyboard_commands)


@bot.message_handler(commands=["schedule"])
def send_schedule_simple(message):
        # –†–∞–∑–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        command, *args = message.text.split()
        if len(args) < 1:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –∫–æ–º–º–∞–Ω–¥—É. \n<i>–ü—Ä–∏–º–µ—Ä: /schedule –¢-143901-–ò–°–¢</i>", reply_markup=keyboard_groups_week)
            return
        else: 
            group_name = args[0].upper()  # –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
            today_only = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            if len(args) > 1 and args[1].lower() == "today":
                today_only = True
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            schedule_text = get_schedule(url, group_name, today_only)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.reply_to(message, schedule_text)

@bot.callback_query_handler(func=lambda call: call.data.startswith("group_"))
def send_schedule(call):
    group_name = call.data.split("_")[1]
    today_only = True if call.data.split("_")[2] == "today" else False

    schedule_text = get_schedule(url, group_name, today_only)

    bot.send_message(call.message.chat.id, schedule_text)

    bot.answer_callback_query(call.id)

@bot.message_handler(commands=["help"])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞:\n\nstart - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\nhelp - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞ –∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–∏–º\nabout - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ",
        reply_markup=keyboard_commands,
    )


@bot.message_handler(commands=["about"])
def send_about(message):
    bot.send_message(message.chat.id, "–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: @K0tok")


@bot.message_handler(func=lambda message: True)
def echo_all(message: telebot.types.Message):
    if message.text in ["üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –ù–¢–ò", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –ù–¢–ò", "üóìÔ∏è"]:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –∫–æ–º–º–∞–Ω–¥—É. \n<i>–ü—Ä–∏–º–µ—Ä: /schedule –¢-143901-–ò–°–¢</i>", reply_markup=keyboard_groups_week)
        return
    if message.text in ["üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "üìÖ"]:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –∫–æ–º–º–∞–Ω–¥—É. \n<i>–ü—Ä–∏–º–µ—Ä: /schedule –¢-143901-–ò–°–¢</i>", reply_markup=keyboard_groups_today)
        return
    if message.text == "–ü—Ä–∏–≤–µ—Ç":
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!")
    if message.text == "–ü–æ–∫–∞":
        bot.reply_to(
            message,
            f"–î–æ—Å–≤–∏–¥–∞–Ω–∏—è, {message.from_user.first_name}.\n–ë—É–¥—É —Å–∫—É—á–∞—Ç—å!",
        )


bot.infinity_polling()
